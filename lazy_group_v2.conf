# Shadowrocket: 2025-07-31 11:30:00
[General]
# 旁路系统。如果禁用此选项，可能会导致一些系统问题，如推送通知延迟。
bypass-system = true

#https://github.com/Johnshall/Shadowrocket-ADBlock-Rules-Forever

# 跳过代理。此选项强制这些域名或 IP 的连接范围由 Shadowrocket TUN 接口来处理，而不是 Shadowrocket 代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com,www.baidu.com

# TUN 旁路路由。Shadowrocket TUN 接口只能处理 TCP 协议。使用此选项可以绕过指定的 IP 范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32

dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,223.5.5.5,119.29.29.29

# 备用 DNS。当覆写 DNS 查询失败或查询时间超过 2 秒，Shadowrocket 会自动回退备用 DNS。如需指定多个 DNS，可用逗号分隔。system 表示回退到系统 DNS。
fallback-dns-server = system

# 启用 IPv6 支持。false 表示不启用，true 表示启用。启用会同时查询 A 记录和 AAAA 记录，优先使用 IPv4 地址解析。
ipv6 = true

# 首选 IPv6。优先向 IPv6 的 DNS 服务器查询 AAAA 记录，优先使用 IPv6 地址解析。false 表示不启用。
prefer-ipv6 = false

# 直连的域名类规则使用系统 DNS 进行查询。false 表示不启用。
dns-direct-system = false

# ping 数据包自动回复。
icmp-auto-reply = true

# 不开启时，「重写的 REJECT 策略」默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false

# 私有 IP 应答。如果不启用此选项，域名解析返回私有 IP，Shadowrocket 会认为该域名被劫持而强制使用代理。
private-ip-answer = true

# 直连域名解析失败后使用代理。false 表示不启用。
dns-direct-fallback-proxy = true

# DNS 劫持。有些设备或软件总是使用硬编码的 DNS 服务器，例如 Netflix 通过 Google DNS(8.8.8.8或8.8.4.4)发送请求，您可以使用此选项来劫持查询。
hijack-dns = 8.8.8.8:53,8.8.4.4:53

# 当 UDP 流量匹配到规则里不支持 UDP 转发的节点策略时重新选择回退行为，可选行为包括 DIRECT、REJECT。DIRECT 表示直连转发 UDP 流量，REJECT 表示拒绝转发 UDP 流量。
udp-policy-not-supported-behaviour = REJECT

update-url = https://raw.githubusercontent.com/lovegpt2028/rule/refs/heads/main/lazy_group_v2.conf

[Proxy]


[Proxy Group]

香港节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=HK|香港\|IEPL
台湾节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,select=0,policy-regex-filter=TW|台湾\|IEPL
日本节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=JP|日本\|IEPL
韩国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=KR|韩国
美国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=US|美国
新加坡节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=SG|新加坡\|IEPL
工兵 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=claw|CF|香港|日本|台湾

链式代理-USA-RN = select,policy-select-name=us-relay-rn,policy-regex-filter=us-relay-rn
链式代理-USA-DN = select,policy-select-name=us-relay-dn,policy-regex-filter=us-relay-dn
#链式代理-USA = url-test,url=http://www.gstatic.com/generate_204, interval=600,policy-regex-filter=^us-relay-

链式代理-JP-1 = select,policy-select-name=jp-relay-oracle1,policy-regex-filter=jp-relay-oracle1
链式代理-JP-2 = select,policy-select-name=jp-relay-oracle2,policy-regex-filter=jp-relay-oracle2
#链式代理-JP =  url-test,url=http://www.gstatic.com/generate_204, interval=600,policy-regex-filter=^jp-relay-oracle
#Static节点 = select,policy-select-name=日本高速03|BGP|流媒体,policy-regex-filter=(?=.*(BGP))^(?=.*(日本))^.*$
#Static节点 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-select-name=日本高速03|BGP|流媒体,policy-regex-filter=(?=.*(BGP))^(?=.*(日本))^.*$
Static节点 = load-balance,policy-select-name=日本高速03|BGP|流媒体,policy-regex-filter=(?=.*(BGP))^(?=.*(日本))^.*$

Claude = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-1
OpenAI = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-1
Twitter = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-1
GitHub = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-1
Telegram = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-2
Facebook = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-2
PayPal = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-2
TikTok = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-2
Amazon = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-USA-DN
谷歌服务 = select,PROXY,链式代理-JP-1,链式代理-JP-2,链式代理-USA-RN,链式代理-USA-DN,policy-select-name=链式代理-JP-2

#海外媒体 = select,链式代理-USA,PROXY,policy-select-name=PROXY
#海外服务 = select,链式代理-USA,PROXY,policy-select-name=PROXY

[Rule]
RULE-SET,https://raw.githubusercontent.com/lovegpt2028/rule/refs/heads/main/direct.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/lovegpt2028/rule/refs/heads/main/proxy-static.list,Static节点
RULE-SET,https://raw.githubusercontent.com/lovegpt2028/rule/refs/heads/main/proxy-us.list,链式代理-USA-DN
RULE-SET,https://raw.githubusercontent.com/lovegpt2028/rule/refs/heads/main/proxy-us-rn.list,链式代理-USA-RN
RULE-SET,https://raw.githubusercontent.com/lovegpt2028/rule/refs/heads/main/proxy-jp.list,PROXY

#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Netflix/Netflix.list,海外媒体
#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Disney/Disney.list,海外媒体
#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/HBO/HBO.list,海外媒体
#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list,海外媒体
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list,TELEGRAM
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PayPal/PayPal.list,PAYPAL
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Twitter/Twitter.list,TWITTER
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list,FACEBOOK
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Amazon/Amazon.list,AMAZON
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Claude/Claude.list,Claude
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list,OpenAI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list,GitHub
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list,谷歌服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Gemini/Gemini.list,谷歌服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list,谷歌服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/TikTok/TikTok.list,TIKTOK
#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list,海外服务


# 表示CN地区的IP分流走直连，GEOIP数据库用来判断IP是否属于CN地区。默认使用Shadowrocket自带的GEOIP数据库，如果您想替换其他数据库，可在 设置 - GeoLite2数据库 里添加和修改。
#GEOIP,CN,DIRECT

# 表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
FINAL,DIRECT

[Host]
# 域名指定本地值：
# example.com = 1.2.3.4

# 域名指定 DNS 服务器：
# example.com = server:1.2.3.4

# wifi名称指定 DNS 服务器，如需指定多个 DNS，可用逗号分隔：
# ssid:wifi名称 = server:1.2.3.4

*.apple.com = server:system
*.icloud.com = server:system
localhost = 127.0.0.1

[URL Rewrite]
# Google搜索引擎防跳转的重写。
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302

[MITM]
# Shadowrocket仅会解密hostname指定的域名的请求，可以使用通配符。也可以使用前缀 - 排除特定主机名，如 -*.example.com。iOS系统和某些应用有严格的安全策略，仅信任某些特定的证书，对这些域名启动解密可能导致问题，如 *.apple.com，*.icloud.com。

hostname = *.google.cn
